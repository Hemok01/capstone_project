apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services" // Firebase 서비스 플러그인 추가
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.eyetoai"
    defaultConfig {
        applicationId "com.eyetoai"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        missingDimensionStrategy 'react-native-camera', 'general'
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_20
        targetCompatibility = JavaVersion.VERSION_20
    }
}

dependencies {
    // React Native core
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.soloader:soloader:0.10.5")

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.20"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // AndroidX
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.appcompat:appcompat:1.4.1"

    // Hermes Engine
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // Google Services
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    // Facebook
    implementation 'com.facebook.fbjni:fbjni:0.6.0'

    // Vision Camera & SVG
    implementation(project(':react-native-svg'))
}


def getEnvVariable(String name) {
    return System.getenv(name) ?: project.properties[name]
}


def firebaseApiKey = getEnvVariable("FIREBASE_API_KEY")
def firebaseAppId = getEnvVariable("FIREBASE_APP_ID")
def firebaseProjectId = getEnvVariable("FIREBASE_PROJECT_ID")
def firebaseStorageBucket = getEnvVariable("FIREBASE_STORAGE_BUCKET")


buildTypes.each {
    it.buildConfigField 'String', 'FIREBASE_API_KEY', "\"${firebaseApiKey}\""
    it.buildConfigField 'String', 'FIREBASE_APP_ID', "\"${firebaseAppId}\""
    it.buildConfigField 'String', 'FIREBASE_PROJECT_ID', "\"${firebaseProjectId}\""
    it.buildConfigField 'String', 'FIREBASE_STORAGE_BUCKET', "\"${firebaseStorageBucket}\""
}
